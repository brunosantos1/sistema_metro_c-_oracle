// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace PM.WebServices.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Estrategia
    {
        /// <summary>
        /// Initializes a new instance of the Estrategia class.
        /// </summary>
        public Estrategia() { }

        /// <summary>
        /// Initializes a new instance of the Estrategia class.
        /// </summary>
        public Estrategia(int? idEstrategia = default(int?), string cdSap = default(string), string dsEstrategia = default(string), string cdProgramacao = default(string), string unEstrategia = default(string), int? idCalendarioFk = default(int?), BaseModel baseModel = default(BaseModel), CalendarioFabrica calendario = default(CalendarioFabrica))
        {
            IdEstrategia = idEstrategia;
            CdSap = cdSap;
            DsEstrategia = dsEstrategia;
            CdProgramacao = cdProgramacao;
            UnEstrategia = unEstrategia;
            IdCalendarioFk = idCalendarioFk;
            BaseModel = baseModel;
            Calendario = calendario;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_estrategia")]
        public int? IdEstrategia { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cd_sap")]
        public string CdSap { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ds_estrategia")]
        public string DsEstrategia { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cd_programacao")]
        public string CdProgramacao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "un_estrategia")]
        public string UnEstrategia { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_calendario_fk")]
        public int? IdCalendarioFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BaseModel")]
        public BaseModel BaseModel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Calendario")]
        public CalendarioFabrica Calendario { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.CdSap != null)
            {
                if (this.CdSap.Length > 6)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CdSap", 6);
                }
                if (this.CdSap.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CdSap", 0);
                }
            }
            if (this.DsEstrategia != null)
            {
                if (this.DsEstrategia.Length > 30)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DsEstrategia", 30);
                }
                if (this.DsEstrategia.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DsEstrategia", 0);
                }
            }
            if (this.CdProgramacao != null)
            {
                if (this.CdProgramacao.Length > 2)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CdProgramacao", 2);
                }
                if (this.CdProgramacao.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CdProgramacao", 0);
                }
            }
            if (this.UnEstrategia != null)
            {
                if (this.UnEstrategia.Length > 3)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "UnEstrategia", 3);
                }
                if (this.UnEstrategia.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "UnEstrategia", 0);
                }
            }
        }
    }
}
