// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace PM.WebServices.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Marco
    {
        /// <summary>
        /// Initializes a new instance of the Marco class.
        /// </summary>
        public Marco() { }

        /// <summary>
        /// Initializes a new instance of the Marco class.
        /// </summary>
        public Marco(int? idMarcador = default(int?), int? idMdRfLinearFk = default(int?), string cdSap = default(string), string dsMarcador = default(string), int? idTpMarcadorFk = default(int?), string ptRfMarcador = default(string), double? nrComprimento = default(double?), int? idUnComprimentoFk = default(int?), int? cdLcInstalacaoFk = default(int?), BaseModel baseModel = default(BaseModel), ModeloLinear modeloLinear = default(ModeloLinear), TipoMarcador tipoMarcador = default(TipoMarcador), LocalInstalacao localInstalacao = default(LocalInstalacao), UnidadeMedida unidadeMedida = default(UnidadeMedida))
        {
            IdMarcador = idMarcador;
            IdMdRfLinearFk = idMdRfLinearFk;
            CdSap = cdSap;
            DsMarcador = dsMarcador;
            IdTpMarcadorFk = idTpMarcadorFk;
            PtRfMarcador = ptRfMarcador;
            NrComprimento = nrComprimento;
            IdUnComprimentoFk = idUnComprimentoFk;
            CdLcInstalacaoFk = cdLcInstalacaoFk;
            BaseModel = baseModel;
            ModeloLinear = modeloLinear;
            TipoMarcador = tipoMarcador;
            LocalInstalacao = localInstalacao;
            UnidadeMedida = unidadeMedida;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_marcador")]
        public int? IdMarcador { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_md_rf_linear_fk")]
        public int? IdMdRfLinearFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cd_sap")]
        public string CdSap { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ds_marcador")]
        public string DsMarcador { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_tp_marcador_fk")]
        public int? IdTpMarcadorFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pt_rf_marcador")]
        public string PtRfMarcador { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nr_comprimento")]
        public double? NrComprimento { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_un_comprimento_fk")]
        public int? IdUnComprimentoFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cd_lc_instalacao_fk")]
        public int? CdLcInstalacaoFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BaseModel")]
        public BaseModel BaseModel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ModeloLinear")]
        public ModeloLinear ModeloLinear { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TipoMarcador")]
        public TipoMarcador TipoMarcador { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocalInstalacao")]
        public LocalInstalacao LocalInstalacao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UnidadeMedida")]
        public UnidadeMedida UnidadeMedida { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.CdSap != null)
            {
                if (this.CdSap.Length > 18)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CdSap", 18);
                }
                if (this.CdSap.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CdSap", 0);
                }
            }
            if (this.DsMarcador != null)
            {
                if (this.DsMarcador.Length > 40)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DsMarcador", 40);
                }
                if (this.DsMarcador.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DsMarcador", 0);
                }
            }
            if (this.PtRfMarcador != null)
            {
                if (this.PtRfMarcador.Length > 18)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "PtRfMarcador", 18);
                }
                if (this.PtRfMarcador.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "PtRfMarcador", 0);
                }
            }
            if (this.ModeloLinear != null)
            {
                this.ModeloLinear.Validate();
            }
            if (this.LocalInstalacao != null)
            {
                this.LocalInstalacao.Validate();
            }
        }
    }
}
