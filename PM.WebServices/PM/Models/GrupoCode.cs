// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace PM.WebServices.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class GrupoCode
    {
        /// <summary>
        /// Initializes a new instance of the GrupoCode class.
        /// </summary>
        public GrupoCode() { }

        /// <summary>
        /// Initializes a new instance of the GrupoCode class.
        /// </summary>
        public GrupoCode(int? idGpCode = default(int?), string cdSap = default(string), IList<Catalogo> catalogos = default(IList<Catalogo>), string dsGpCode = default(string), bool? stGpCode = default(bool?), BaseModel baseModel = default(BaseModel))
        {
            IdGpCode = idGpCode;
            CdSap = cdSap;
            Catalogos = catalogos;
            DsGpCode = dsGpCode;
            StGpCode = stGpCode;
            BaseModel = baseModel;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_gp_code")]
        public int? IdGpCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cd_sap")]
        public string CdSap { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Catalogos")]
        public IList<Catalogo> Catalogos { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ds_gp_code")]
        public string DsGpCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "st_gp_code")]
        public bool? StGpCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BaseModel")]
        public BaseModel BaseModel { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.CdSap != null)
            {
                if (this.CdSap.Length > 8)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CdSap", 8);
                }
                if (this.CdSap.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CdSap", 0);
                }
            }
            if (this.Catalogos != null)
            {
                foreach (var element in this.Catalogos)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.DsGpCode != null)
            {
                if (this.DsGpCode.Length > 40)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DsGpCode", 40);
                }
                if (this.DsGpCode.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DsGpCode", 0);
                }
            }
        }
    }
}
