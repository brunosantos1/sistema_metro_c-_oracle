// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace PM.WebServices.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class SistemaEmpresa
    {
        /// <summary>
        /// Initializes a new instance of the SistemaEmpresa class.
        /// </summary>
        public SistemaEmpresa() { }

        /// <summary>
        /// Initializes a new instance of the SistemaEmpresa class.
        /// </summary>
        public SistemaEmpresa(int idEmpresa, DateTime dtCadastro, string dsDescricao, bool isAtivo, IList<SistemaAplicacao> idAplicacao = default(IList<SistemaAplicacao>), BaseModel baseModel = default(BaseModel))
        {
            IdEmpresa = idEmpresa;
            DtCadastro = dtCadastro;
            DsDescricao = dsDescricao;
            IsAtivo = isAtivo;
            IdAplicacao = idAplicacao;
            BaseModel = baseModel;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_empresa")]
        public int IdEmpresa { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dt_cadastro")]
        public DateTime DtCadastro { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ds_descricao")]
        public string DsDescricao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isAtivo")]
        public bool IsAtivo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_aplicacao")]
        public IList<SistemaAplicacao> IdAplicacao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BaseModel")]
        public BaseModel BaseModel { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (DsDescricao == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DsDescricao");
            }
            if (this.DsDescricao != null)
            {
                if (this.DsDescricao.Length > 100)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DsDescricao", 100);
                }
                if (this.DsDescricao.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DsDescricao", 0);
                }
            }
            if (this.IdAplicacao != null)
            {
                foreach (var element in this.IdAplicacao)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
