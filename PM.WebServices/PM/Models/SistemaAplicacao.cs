// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace PM.WebServices.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class SistemaAplicacao
    {
        /// <summary>
        /// Initializes a new instance of the SistemaAplicacao class.
        /// </summary>
        public SistemaAplicacao() { }

        /// <summary>
        /// Initializes a new instance of the SistemaAplicacao class.
        /// </summary>
        public SistemaAplicacao(int idAplicacao, string dsCodigoAplicacao, int idEmpresa, DateTime dtCadastro, string dsDescricao, string nmBancohost, int nuBancoporta, string nmBanconome, string nmBancousuario, string dsBancosenha, string dsBancoprotocolo, bool isAtivo, IList<SistemaTipoLog> idTipoLog = default(IList<SistemaTipoLog>), string dsObservacao = default(string), Guid? dsToken = default(Guid?), BaseModel baseModel = default(BaseModel))
        {
            IdAplicacao = idAplicacao;
            DsCodigoAplicacao = dsCodigoAplicacao;
            IdEmpresa = idEmpresa;
            IdTipoLog = idTipoLog;
            DtCadastro = dtCadastro;
            DsDescricao = dsDescricao;
            DsObservacao = dsObservacao;
            NmBancohost = nmBancohost;
            NuBancoporta = nuBancoporta;
            NmBanconome = nmBanconome;
            NmBancousuario = nmBancousuario;
            DsBancosenha = dsBancosenha;
            DsBancoprotocolo = dsBancoprotocolo;
            DsToken = dsToken;
            IsAtivo = isAtivo;
            BaseModel = baseModel;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_aplicacao")]
        public int IdAplicacao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ds_codigo_aplicacao")]
        public string DsCodigoAplicacao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_empresa")]
        public int IdEmpresa { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_tipo_log")]
        public IList<SistemaTipoLog> IdTipoLog { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dt_cadastro")]
        public DateTime DtCadastro { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ds_descricao")]
        public string DsDescricao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ds_observacao")]
        public string DsObservacao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nm_bancohost")]
        public string NmBancohost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nu_bancoporta")]
        public int NuBancoporta { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nm_banconome")]
        public string NmBanconome { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nm_bancousuario")]
        public string NmBancousuario { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ds_bancosenha")]
        public string DsBancosenha { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ds_bancoprotocolo")]
        public string DsBancoprotocolo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ds_token")]
        public Guid? DsToken { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isAtivo")]
        public bool IsAtivo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BaseModel")]
        public BaseModel BaseModel { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (DsCodigoAplicacao == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DsCodigoAplicacao");
            }
            if (DsDescricao == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DsDescricao");
            }
            if (NmBancohost == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NmBancohost");
            }
            if (NmBanconome == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NmBanconome");
            }
            if (NmBancousuario == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NmBancousuario");
            }
            if (DsBancosenha == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DsBancosenha");
            }
            if (DsBancoprotocolo == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DsBancoprotocolo");
            }
            if (this.DsCodigoAplicacao != null)
            {
                if (this.DsCodigoAplicacao.Length > 10)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DsCodigoAplicacao", 10);
                }
                if (this.DsCodigoAplicacao.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DsCodigoAplicacao", 0);
                }
            }
            if (this.IdTipoLog != null)
            {
                foreach (var element in this.IdTipoLog)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.DsDescricao != null)
            {
                if (this.DsDescricao.Length > 100)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DsDescricao", 100);
                }
                if (this.DsDescricao.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DsDescricao", 0);
                }
            }
            if (this.DsObservacao != null)
            {
                if (this.DsObservacao.Length > 8000)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DsObservacao", 8000);
                }
                if (this.DsObservacao.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DsObservacao", 0);
                }
            }
            if (this.NmBancohost != null)
            {
                if (this.NmBancohost.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "NmBancohost", 50);
                }
                if (this.NmBancohost.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "NmBancohost", 0);
                }
            }
            if (this.NmBanconome != null)
            {
                if (this.NmBanconome.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "NmBanconome", 50);
                }
                if (this.NmBanconome.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "NmBanconome", 0);
                }
            }
            if (this.NmBancousuario != null)
            {
                if (this.NmBancousuario.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "NmBancousuario", 50);
                }
                if (this.NmBancousuario.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "NmBancousuario", 0);
                }
            }
            if (this.DsBancosenha != null)
            {
                if (this.DsBancosenha.Length > 100)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DsBancosenha", 100);
                }
                if (this.DsBancosenha.Length < 6)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DsBancosenha", 6);
                }
            }
            if (this.DsBancoprotocolo != null)
            {
                if (this.DsBancoprotocolo.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DsBancoprotocolo", 50);
                }
                if (this.DsBancoprotocolo.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DsBancoprotocolo", 0);
                }
            }
        }
    }
}
