// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace PM.WebServices.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Perfil
    {
        /// <summary>
        /// Initializes a new instance of the Perfil class.
        /// </summary>
        public Perfil() { }

        /// <summary>
        /// Initializes a new instance of the Perfil class.
        /// </summary>
        public Perfil(int? idPerfil = default(int?), string cdSap = default(string), string dsPerfil = default(string), BaseModel baseModel = default(BaseModel), IList<Catalogo> catalogos = default(IList<Catalogo>))
        {
            IdPerfil = idPerfil;
            CdSap = cdSap;
            DsPerfil = dsPerfil;
            BaseModel = baseModel;
            Catalogos = catalogos;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_perfil")]
        public int? IdPerfil { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cd_sap")]
        public string CdSap { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ds_perfil")]
        public string DsPerfil { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BaseModel")]
        public BaseModel BaseModel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Catalogos")]
        public IList<Catalogo> Catalogos { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.CdSap != null)
            {
                if (this.CdSap.Length > 9)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CdSap", 9);
                }
                if (this.CdSap.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CdSap", 0);
                }
            }
            if (this.DsPerfil != null)
            {
                if (this.DsPerfil.Length > 30)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DsPerfil", 30);
                }
                if (this.DsPerfil.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DsPerfil", 0);
                }
            }
            if (this.Catalogos != null)
            {
                foreach (var element in this.Catalogos)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
