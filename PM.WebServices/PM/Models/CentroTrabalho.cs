// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace PM.WebServices.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class CentroTrabalho
    {
        /// <summary>
        /// Initializes a new instance of the CentroTrabalho class.
        /// </summary>
        public CentroTrabalho() { }

        /// <summary>
        /// Initializes a new instance of the CentroTrabalho class.
        /// </summary>
        public CentroTrabalho(int? idCtTrabalho = default(int?), string cdSap = default(string), string ctTrabalho = default(string), int? idCentroFk = default(int?), int? idTpCtTrabalhoFk = default(int?), string dsCtTrabalho = default(string), int? idLocalizacaoFk = default(int?), string cdRsCtTrabalho = default(string), string cdChUtilizacaoLista = default(string), string chControle = default(string), bool? crChControle = default(bool?), DateTime? dtInicio = default(DateTime?), DateTime? dtFim = default(DateTime?), int? idCtCustoFk = default(int?), string arContabil = default(string), BaseModel baseModel = default(BaseModel), CentroLocalizacao centroLocalizacao = default(CentroLocalizacao), TipoCentroTrabalho tpCentroTrabalho = default(TipoCentroTrabalho), CentroCusto centroCusto = default(CentroCusto), Localizacao localizacao = default(Localizacao))
        {
            IdCtTrabalho = idCtTrabalho;
            CdSap = cdSap;
            CtTrabalho = ctTrabalho;
            IdCentroFk = idCentroFk;
            IdTpCtTrabalhoFk = idTpCtTrabalhoFk;
            DsCtTrabalho = dsCtTrabalho;
            IdLocalizacaoFk = idLocalizacaoFk;
            CdRsCtTrabalho = cdRsCtTrabalho;
            CdChUtilizacaoLista = cdChUtilizacaoLista;
            ChControle = chControle;
            CrChControle = crChControle;
            DtInicio = dtInicio;
            DtFim = dtFim;
            IdCtCustoFk = idCtCustoFk;
            ArContabil = arContabil;
            BaseModel = baseModel;
            CentroLocalizacao = centroLocalizacao;
            TpCentroTrabalho = tpCentroTrabalho;
            CentroCusto = centroCusto;
            Localizacao = localizacao;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_ct_trabalho")]
        public int? IdCtTrabalho { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cd_sap")]
        public string CdSap { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ct_trabalho")]
        public string CtTrabalho { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_centro_fk")]
        public int? IdCentroFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_tp_ct_trabalho_fk")]
        public int? IdTpCtTrabalhoFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ds_ct_trabalho")]
        public string DsCtTrabalho { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_localizacao_fk")]
        public int? IdLocalizacaoFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cd_rs_ct_trabalho")]
        public string CdRsCtTrabalho { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cd_ch_utilizacao_lista")]
        public string CdChUtilizacaoLista { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ch_controle")]
        public string ChControle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cr_ch_controle")]
        public bool? CrChControle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dt_inicio")]
        public DateTime? DtInicio { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dt_fim")]
        public DateTime? DtFim { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_ct_custo_fk")]
        public int? IdCtCustoFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ar_contabil")]
        public string ArContabil { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BaseModel")]
        public BaseModel BaseModel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CentroLocalizacao")]
        public CentroLocalizacao CentroLocalizacao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TpCentroTrabalho")]
        public TipoCentroTrabalho TpCentroTrabalho { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CentroCusto")]
        public CentroCusto CentroCusto { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Localizacao")]
        public Localizacao Localizacao { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.CdSap != null)
            {
                if (this.CdSap.Length > 8)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CdSap", 8);
                }
                if (this.CdSap.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CdSap", 0);
                }
            }
            if (this.CtTrabalho != null)
            {
                if (this.CtTrabalho.Length > 8)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CtTrabalho", 8);
                }
                if (this.CtTrabalho.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CtTrabalho", 0);
                }
            }
            if (this.DsCtTrabalho != null)
            {
                if (this.DsCtTrabalho.Length > 40)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DsCtTrabalho", 40);
                }
                if (this.DsCtTrabalho.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DsCtTrabalho", 0);
                }
            }
            if (this.CdRsCtTrabalho != null)
            {
                if (this.CdRsCtTrabalho.Length > 3)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CdRsCtTrabalho", 3);
                }
                if (this.CdRsCtTrabalho.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CdRsCtTrabalho", 0);
                }
            }
            if (this.CdChUtilizacaoLista != null)
            {
                if (this.CdChUtilizacaoLista.Length > 3)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CdChUtilizacaoLista", 3);
                }
                if (this.CdChUtilizacaoLista.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CdChUtilizacaoLista", 0);
                }
            }
            if (this.ChControle != null)
            {
                if (this.ChControle.Length > 4)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "ChControle", 4);
                }
                if (this.ChControle.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "ChControle", 0);
                }
            }
            if (this.ArContabil != null)
            {
                if (this.ArContabil.Length > 4)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "ArContabil", 4);
                }
                if (this.ArContabil.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "ArContabil", 0);
                }
            }
            if (this.CentroLocalizacao != null)
            {
                this.CentroLocalizacao.Validate();
            }
            if (this.TpCentroTrabalho != null)
            {
                this.TpCentroTrabalho.Validate();
            }
            if (this.CentroCusto != null)
            {
                this.CentroCusto.Validate();
            }
            if (this.Localizacao != null)
            {
                this.Localizacao.Validate();
            }
        }
    }
}
