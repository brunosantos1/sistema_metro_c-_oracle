// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace PM.WebServices.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Parceiro
    {
        /// <summary>
        /// Initializes a new instance of the Parceiro class.
        /// </summary>
        public Parceiro() { }

        /// <summary>
        /// Initializes a new instance of the Parceiro class.
        /// </summary>
        public Parceiro(int? idParceiro = default(int?), int? idLocalInstFk = default(int?), int? idEquipamentoFk = default(int?), int? idCtTrabalhoFk = default(int?), string sgFuncaoParceiro = default(string), string cdSap = default(string), BaseModel baseModel = default(BaseModel), LocalInstalacao localInstalacao = default(LocalInstalacao), Equipamento equipamento = default(Equipamento), CentroTrabalho centroTrabalho = default(CentroTrabalho))
        {
            IdParceiro = idParceiro;
            IdLocalInstFk = idLocalInstFk;
            IdEquipamentoFk = idEquipamentoFk;
            IdCtTrabalhoFk = idCtTrabalhoFk;
            SgFuncaoParceiro = sgFuncaoParceiro;
            CdSap = cdSap;
            BaseModel = baseModel;
            LocalInstalacao = localInstalacao;
            Equipamento = equipamento;
            CentroTrabalho = centroTrabalho;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_parceiro")]
        public int? IdParceiro { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_local_inst_fk")]
        public int? IdLocalInstFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_equipamento_fk")]
        public int? IdEquipamentoFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_ct_trabalho_fk")]
        public int? IdCtTrabalhoFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sg_funcao_parceiro")]
        public string SgFuncaoParceiro { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cd_sap")]
        public string CdSap { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BaseModel")]
        public BaseModel BaseModel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocalInstalacao")]
        public LocalInstalacao LocalInstalacao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Equipamento")]
        public Equipamento Equipamento { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CentroTrabalho")]
        public CentroTrabalho CentroTrabalho { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.SgFuncaoParceiro != null)
            {
                if (this.SgFuncaoParceiro.Length > 2)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "SgFuncaoParceiro", 2);
                }
                if (this.SgFuncaoParceiro.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "SgFuncaoParceiro", 0);
                }
            }
            if (this.CdSap != null)
            {
                if (this.CdSap.Length > 12)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CdSap", 12);
                }
                if (this.CdSap.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CdSap", 0);
                }
            }
            if (this.LocalInstalacao != null)
            {
                this.LocalInstalacao.Validate();
            }
            if (this.Equipamento != null)
            {
                this.Equipamento.Validate();
            }
            if (this.CentroTrabalho != null)
            {
                this.CentroTrabalho.Validate();
            }
        }
    }
}
