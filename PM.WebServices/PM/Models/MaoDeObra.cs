// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace PM.WebServices.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class MaoDeObra
    {
        /// <summary>
        /// Initializes a new instance of the MaoDeObra class.
        /// </summary>
        public MaoDeObra() { }

        /// <summary>
        /// Initializes a new instance of the MaoDeObra class.
        /// </summary>
        public MaoDeObra(int? idMaodeobra = default(int?), int? idOperacaoFk = default(int?), int? idCentroTrabalhoFk = default(int?), int? idTarifaFk = default(int?), int? idChavecontroleFk = default(int?), DateTime? dtHoraMaodeobra = default(DateTime?), DateTime? dtExecucao = default(DateTime?), int? idEmpregadoFk = default(int?), double? tmPreparo = default(double?), double? tmDeslocamento = default(double?), double? tmAcesso = default(double?), double? tmExecucao = default(double?), double? drDuracao = default(double?), int? idUnidadeFk = default(int?), BaseModel baseModel = default(BaseModel), Tarifa tarifa = default(Tarifa), OperacaoOrdem operacaoOrdem = default(OperacaoOrdem), CentroTrabalho centroTrabalho = default(CentroTrabalho), ChaveControle chaveControle = default(ChaveControle), Empregado empregado = default(Empregado), UnidadeMedida unidadeMedida = default(UnidadeMedida))
        {
            IdMaodeobra = idMaodeobra;
            IdOperacaoFk = idOperacaoFk;
            IdCentroTrabalhoFk = idCentroTrabalhoFk;
            IdTarifaFk = idTarifaFk;
            IdChavecontroleFk = idChavecontroleFk;
            DtHoraMaodeobra = dtHoraMaodeobra;
            DtExecucao = dtExecucao;
            IdEmpregadoFk = idEmpregadoFk;
            TmPreparo = tmPreparo;
            TmDeslocamento = tmDeslocamento;
            TmAcesso = tmAcesso;
            TmExecucao = tmExecucao;
            DrDuracao = drDuracao;
            IdUnidadeFk = idUnidadeFk;
            BaseModel = baseModel;
            Tarifa = tarifa;
            OperacaoOrdem = operacaoOrdem;
            CentroTrabalho = centroTrabalho;
            ChaveControle = chaveControle;
            Empregado = empregado;
            UnidadeMedida = unidadeMedida;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_maodeobra")]
        public int? IdMaodeobra { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_operacao_fk")]
        public int? IdOperacaoFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_centro_trabalho_fk")]
        public int? IdCentroTrabalhoFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_tarifa_fk")]
        public int? IdTarifaFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_chavecontrole_fk")]
        public int? IdChavecontroleFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dt_hora_maodeobra")]
        public DateTime? DtHoraMaodeobra { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dt_execucao")]
        public DateTime? DtExecucao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_empregado_fk")]
        public int? IdEmpregadoFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tm_preparo")]
        public double? TmPreparo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tm_deslocamento")]
        public double? TmDeslocamento { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tm_acesso")]
        public double? TmAcesso { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tm_execucao")]
        public double? TmExecucao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dr_duracao")]
        public double? DrDuracao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_unidade_fk")]
        public int? IdUnidadeFk { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BaseModel")]
        public BaseModel BaseModel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Tarifa")]
        public Tarifa Tarifa { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OperacaoOrdem")]
        public OperacaoOrdem OperacaoOrdem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CentroTrabalho")]
        public CentroTrabalho CentroTrabalho { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ChaveControle")]
        public ChaveControle ChaveControle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Empregado")]
        public Empregado Empregado { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UnidadeMedida")]
        public UnidadeMedida UnidadeMedida { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.Tarifa != null)
            {
                this.Tarifa.Validate();
            }
            if (this.OperacaoOrdem != null)
            {
                this.OperacaoOrdem.Validate();
            }
            if (this.CentroTrabalho != null)
            {
                this.CentroTrabalho.Validate();
            }
            if (this.Empregado != null)
            {
                this.Empregado.Validate();
            }
        }
    }
}
